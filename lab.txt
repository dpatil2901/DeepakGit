LINKEDIN:

self.spark=SparkSession.builder.master('local').appName('LinkedIn Post Analysis').getOrCreate()
return self.spark

df=spark.read.csv(input_path).option("header","true")
return df


df1=posts.filter(col('postDate').between(start_date,end_date))
return df1

df2=posts.orderBy("likes",ascending=False).limit(n)
return df2

df3=posts.orderBy("comments",ascending=False).limit(n)
return df3

============================================================================================================================================================
JOB POSTINGS:

spark = SparkSession.builder.appName("Job Postings Analysis").getorCreate()
return spark

df1=job_postings.filter(job_postings.department == department)
return df1

df2=job_postings.count(job_postings.numPositions)
return df2

df3=job_postings.orderBy(F.col("postedDate").desc()).limit(n)
return df3


============================================================================================================================================================
VIDEOS & TAGS:

df=videos.orderBy('views',ascending=False).limit(n)
return df


df1=videos.orderBy('likes',ascending=False).limit(n)
return df1


df2=videos.withColumn('ratio',col('likes')/col('dislikes')).orderBy('ratio',ascending=False).limit(n)
return df2


dt=tags.groupBy('tag').count().orderBy('count',ascending=False).limit(n)
dt1=dt.select('tag').rdd.flatMap(lambda x:x).collect()
return dt1

============================================================================================================================================================
gym membership:

df=memberships.join(enrollment,on="memberID",how="inner")
return df

df1=memberships.join(enrollment,on="memberID",how="left")
df2=df1.withColumn("fullName",concat_ws(' ',"firstName","lastName")
return df2

df3=memberships.groupBy("memberID").agg(F.max(F.col("paidAmount"))).alias("max").orderby('max',ascending=False).first()['memberID']
return df3

df4=memberships.agg(F.sum(col("paidAmount"))).alias("total_sum")
return df4



